/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel container;
    private EcoSystem ecosystem;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel container, EcoSystem ecosystem) {
        initComponents();

        this.container = container;
        this.ecosystem = ecosystem;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox(){
        networkJComboBox.removeAllItems();
        
        for (Network network : ecosystem.getNetworkList()){
            networkJComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        enterpriseJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseJComboBox.addItem(enterprise);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        VerifyPassword_JPasswordField = new javax.swing.JPasswordField();
        Reset_JButton1 = new javax.swing.JButton();
        Check_JButton = new javax.swing.JButton();
        Valid_JLabel = new javax.swing.JLabel();
        Valid3_JLabel = new javax.swing.JLabel();
        Valid2_JLabel = new javax.swing.JLabel();
        Valid1_JLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(39, 58, 796, 175);

        jLabel1.setText("NETWORK");
        add(jLabel1);
        jLabel1.setBounds(256, 274, 59, 16);

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox);
        networkJComboBox.setBounds(400, 271, 136, 22);

        jLabel2.setText("USERNAME");
        add(jLabel2);
        jLabel2.setBounds(266, 429, 64, 16);
        add(usernameJTextField);
        usernameJTextField.setBounds(400, 426, 136, 22);

        jLabel3.setText("ENTERPRISE");
        add(jLabel3);
        jLabel3.setBounds(256, 331, 72, 16);

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(enterpriseJComboBox);
        enterpriseJComboBox.setBounds(400, 328, 136, 22);

        submitJButton.setBackground(new java.awt.Color(204, 204, 255));
        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(0, 51, 255));
        submitJButton.setText("SUBMIT");
        submitJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton);
        submitJButton.setBounds(702, 673, 112, 49);

        jLabel4.setText("PASSWORD");
        add(jLabel4);
        jLabel4.setBounds(263, 473, 68, 16);
        add(nameJTextField);
        nameJTextField.setBounds(400, 372, 136, 22);

        jLabel5.setText("NAME");
        add(jLabel5);
        jLabel5.setBounds(305, 375, 33, 16);
        add(passwordJPasswordField);
        passwordJPasswordField.setBounds(400, 470, 134, 22);

        backJButton.setBackground(new java.awt.Color(204, 204, 255));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setForeground(new java.awt.Color(0, 51, 255));
        backJButton.setText("BACK");
        backJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton);
        backJButton.setBounds(39, 674, 110, 46);

        jLabel7.setText("VERIFY PASSWORD");
        add(jLabel7);
        jLabel7.setBounds(205, 515, 113, 16);

        VerifyPassword_JPasswordField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        VerifyPassword_JPasswordField.setToolTipText("Alpha-Numeric values, at least 8 characters");
        VerifyPassword_JPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerifyPassword_JPasswordFieldActionPerformed(evt);
            }
        });
        add(VerifyPassword_JPasswordField);
        VerifyPassword_JPasswordField.setBounds(400, 514, 136, 23);

        Reset_JButton1.setBackground(new java.awt.Color(204, 204, 255));
        Reset_JButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Reset_JButton1.setForeground(new java.awt.Color(0, 51, 255));
        Reset_JButton1.setText("RESET");
        Reset_JButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Reset_JButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset_JButton1ActionPerformed(evt);
            }
        });
        add(Reset_JButton1);
        Reset_JButton1.setBounds(558, 673, 112, 49);

        Check_JButton.setBackground(new java.awt.Color(204, 204, 255));
        Check_JButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Check_JButton.setForeground(new java.awt.Color(0, 51, 255));
        Check_JButton.setText("CHECK ?");
        Check_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Check_JButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Check_JButtonActionPerformed(evt);
            }
        });
        add(Check_JButton);
        Check_JButton.setBounds(195, 674, 102, 45);

        Valid_JLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(Valid_JLabel);
        Valid_JLabel.setBounds(756, 420, 80, 20);

        Valid3_JLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(Valid3_JLabel);
        Valid3_JLabel.setBounds(756, 382, 80, 20);

        Valid2_JLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(Valid2_JLabel);
        Valid2_JLabel.setBounds(756, 496, 80, 20);

        Valid1_JLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(Valid1_JLabel);
        Valid1_JLabel.setBounds(756, 458, 80, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
        
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        
        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();
        
        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        
        UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
        populateTable();
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        container.remove(this);
         Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void VerifyPassword_JPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerifyPassword_JPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VerifyPassword_JPasswordFieldActionPerformed

    private void Reset_JButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset_JButton1ActionPerformed
        nameJTextField.setText("");
        usernameJTextField.setText("");
        passwordJPasswordField.setText("");
        VerifyPassword_JPasswordField.setText("");
    }//GEN-LAST:event_Reset_JButton1ActionPerformed

    private void Check_JButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Check_JButtonActionPerformed
        // TODO add your handling code here:
        boolean flag =true;
        String name = nameJTextField.getText();
        Pattern pname=Pattern.compile("^[a-zA-Z0-9]{3,30}$");
        Matcher mname=pname.matcher(name);
        boolean isnameValid=mname.matches();

        String userName = usernameJTextField.getText();
        Pattern puser=Pattern.compile("^[a-zA-Z0-9]{3,30}$");
        Matcher muser=puser.matcher(userName);
        boolean isuserValid=muser.matches();

        String password = passwordJPasswordField.getText();
        Pattern pPassword= Pattern.compile("^[a-zA-Z0-9]{8,}$"); //!@#\$%\^&\*]{8,}$
        Matcher mPwd= pPassword.matcher(password);
        boolean isPasswordValid=mPwd.matches();

        String verifypassword = VerifyPassword_JPasswordField.getText();
        Pattern prePassword= Pattern.compile("^[a-zA-Z0-9]{8,}");
        Matcher mrePwd= prePassword.matcher(verifypassword);
        boolean isrePasswordValid=mrePwd.matches();

        Valid_JLabel.setText(Boolean.toString(isuserValid));
        Valid1_JLabel.setText(Boolean.toString(isPasswordValid));
        Valid2_JLabel.setText(Boolean.toString(isrePasswordValid));
        Valid3_JLabel.setText(Boolean.toString(isnameValid));
        for (Network network : ecosystem.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    String username1=userAccount.getUsername();
                    if(username1.equals(userName)){
                        flag=false;
                        submitJButton.setEnabled(false);
                        JOptionPane.showMessageDialog(null,"Two People Cannot have the same username");
                    }
                }
            }
        }

        if(passwordJPasswordField.getText().equals(VerifyPassword_JPasswordField.getText())){
            if(isuserValid==true && isPasswordValid==true && isrePasswordValid==true && isnameValid==true && flag==true){
                Valid3_JLabel.setForeground(Color.green);
                Valid3_JLabel.setText(Boolean.toString(isnameValid));
                Valid_JLabel.setForeground(Color.green);
                Valid_JLabel.setText(Boolean.toString(isuserValid));
                Valid1_JLabel.setForeground(Color.green);
                Valid1_JLabel.setText(Boolean.toString(isPasswordValid));
                Valid2_JLabel.setForeground(Color.green);
                Valid2_JLabel.setText(Boolean.toString(isrePasswordValid));
                submitJButton.setEnabled(true);
                nameJTextField.setEditable(false);
                usernameJTextField.setEditable(false);
                passwordJPasswordField.setEditable(false);
                VerifyPassword_JPasswordField.setEditable(false);
            }
            else{
                JOptionPane.showMessageDialog(null, "PLease input valid details");
                Valid3_JLabel.setForeground(Color.red);
                Valid3_JLabel.setText(Boolean.toString(isnameValid));
                Valid_JLabel.setForeground(Color.red);
                Valid_JLabel.setText(Boolean.toString(isuserValid));
                Valid1_JLabel.setForeground(Color.red);
                Valid1_JLabel.setText(Boolean.toString(isPasswordValid));
                Valid2_JLabel.setForeground(Color.red);
                Valid2_JLabel.setText(Boolean.toString(isrePasswordValid));
                nameJTextField.setEditable(true);
                usernameJTextField.setEditable(true);
                passwordJPasswordField.setEditable(true);
                VerifyPassword_JPasswordField.setEditable(true);
            }
        }
    }//GEN-LAST:event_Check_JButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Check_JButton;
    private javax.swing.JButton Reset_JButton1;
    private javax.swing.JLabel Valid1_JLabel;
    private javax.swing.JLabel Valid2_JLabel;
    private javax.swing.JLabel Valid3_JLabel;
    private javax.swing.JLabel Valid_JLabel;
    private javax.swing.JPasswordField VerifyPassword_JPasswordField;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
